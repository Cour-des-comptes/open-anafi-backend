"""
Django settings for ccomptes project.

Generated by 'django-admin startproject' using Django 2.1.

For more information on this file, see
https://docs.djangoproject.com/en/2.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.1/ref/settings/
"""
import os

import configparser

config = configparser.ConfigParser()
config.read('/opt/local_config.ini')

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = config['DEFAULT']['SECRET_KEY'] # 'secret-key-of-myapp'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ["*"]
if DEBUG:
    LOGGING = {
        'version': 1,
        'handlers': {
            'console': {
                'class': 'logging.StreamHandler',
            },
        },
        'loggers': {
            'ccomptes_ldap_auth': {
                'level': 'DEBUG',
                'handlers': ['console'],
            },
        },
    }

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'open_anafi',
    'comment',
    'rest_framework',
    'corsheaders',
    'mptt',
    'django_celery_results',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'ccomptes.urls'

CORS_ORIGIN_ALLOW_ALL = True

CORS_ALLOW_METHODS = (
    'DELETE',
    'GET',
    'OPTIONS',
    'PATCH',
    'POST',
    'PUT',
)

CORS_ALLOW_HEADERS = (
    'accept',
    'accept-encoding',
    'authorization',
    'content-type',
    'dnt',
    'origin',
    'user-agent',
    'x-csrftoken',
    'x-requested-with',
)

CORS_EXPOSE_HEADERS = (
    'Content-Disposition',
)

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'ccomptes.wsgi.application'

REST_FRAMEWORK = {
    'DEFAULT_RENDERER_CLASSES': (
        'rest_framework.renderers.JSONRenderer',
    ),
    'DEFAULT_PARSER_CLASSES': (
        'rest_framework.parsers.JSONParser',
    ),
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'open_anafi.authentication.JWTAuthentication',
    ),
    'DEFAULT_PERMISSION_CLASSES': (
        'rest_framework.permissions.AllowAny',
    ),
    'EXCEPTION_HANDLER': ( 
        'open_anafi.views.custom_exception_handler'
    ),

}


# Database
# https://docs.djangoproject.com/en/2.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE':  config['DATABASE_DEFAULT']['ENGINE'],
        'NAME': config['DATABASE_DEFAULT']['NAME'],
        'USER': config['DATABASE_DEFAULT'].get('USER', None),
        'PASSWORD': config['DATABASE_DEFAULT'].get('PASSWORD', None),
        'HOST': config['DATABASE_DEFAULT'].get('HOST', None),
        'PORT': config['DATABASE_DEFAULT'].get('PORT', None),
    },
    'cci': {
        'ENGINE': config['DATABASE_CCI']['ENGINE'],
        'NAME': config['DATABASE_CCI']['NAME'],
        'USER': config['DATABASE_CCI']['USER'],
        'PASSWORD': config['DATABASE_CCI']['PASSWORD'],
        'HOST': config['DATABASE_CCI']['HOST'],
        'PORT': config['DATABASE_CCI']['PORT'],
    }
}

# Baseline configuration.

# Set up the basic group parameters.

# Simple group restrictions
AUTH_LDAP_REQUIRE_GROUP = config['LDAP']['AUTH_LDAP_REQUIRE_GROUP']

# Populate the Django user from the LDAP directory.

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/2.1/topics/i18n/

LANGUAGE_CODE = 'fr-fr'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.1/howto/static-files/
MEDIA_ROOT = config['DEFAULT']['MEDIA_ROOT']
STATIC_URL = config['DEFAULT']['STATIC_URL']
TEMPLATES_ROOT = BASE_DIR + config['DEFAULT']['TEMPLATES_ROOT']

CELERY_BROKER_URL =config['CELERY']['CELERY_BROKER_URL']

CELERY_BROKER_HEARTBEAT = None 

CELERY_RESULT_BACKEND = config['CELERY']['CELERY_RESULT_BACKEND']

LDAP_SERVER = config['LDAP']['LDAP_SERVER']
LDAP_USER = config['LDAP']['LDAP_USER']
LDAP_DOMAIN = config['LDAP']['LDAP_DOMAIN']
LDAP_PASSWORD =config['LDAP']['LDAP_PASSWORD']
LDAP_DC = config['LDAP']['LDAP_DC']

JWT_KEY = config['JWT']['JWT_KEY']
